handlers = java.util.logging.ConsoleHandler
.level = ALL

# Arguments to the format string are used to produce a string from a LogRecord:
#   1 - date - a Date object representing event time of the log record
#   2 - source - a string representing the caller, if available; otherwise, the logger's name.
#   3 - logger - the logger's name
#   4 - level - the log level
#   5 - message - the formatted log message returned from the Formatter.formatMessage(LogRecord) method. 
#       It uses java.text formatting and does NOT use the java.util.Formatter format argument
#       To provide params to the message, need to use the method:
#           log(Level level, String msg, Object[] params)
#           the msg string would for format parameters in the format: { ArgumentIndex , FormatType , FormatStyle }
#           e.g. log("At {1,time} on {1,date}, there was {2} on planet {0,number,integer}.", new object[] {planet, new Date(), event}))
#           see: https://docs.oracle.com/javase/7/docs/api/java/text/MessageFormat.html
#   6 - thrown - a string representing the throwable associated with the log record and its backtrace 
#       beginning with a newline character, if any; otherwise, an empty string
java.util.logging.SimpleFormatter.format=[%1$tm-%1$td %1$tT:%1$tL] [%4$-7s] [%3$-10s] %5$s %n

java.util.logging.ConsoleHandler.level=ALL
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

# frc.robot.handlers=java.util.logging.ConsoleHandler